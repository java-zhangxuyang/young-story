<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.mapper.StaffNoteMapper">
  <resultMap id="BaseResultMap" type="com.young.model.StaffNote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="staff_name" jdbcType="VARCHAR" property="staffName" />
    <result column="duration" jdbcType="DECIMAL" property="duration" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="back1" jdbcType="VARCHAR" property="back1" />
    <result column="back2" jdbcType="VARCHAR" property="back2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, staff_id, staff_name, duration, time, back1, back2
  </sql>
  <select id="selectByExample" parameterType="com.young.model.StaffNoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from staff_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.young.model.StaffNote">
    insert into staff_note (id, staff_id, staff_name, 
      duration, time, back1, 
      back2)
    values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, 
      #{duration,jdbcType=DECIMAL}, #{time,jdbcType=TIMESTAMP}, #{back1,jdbcType=VARCHAR}, 
      #{back2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.young.model.StaffNote">
    insert into staff_note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="staffName != null">
        staff_name,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="back1 != null">
        back1,
      </if>
      <if test="back2 != null">
        back2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=DECIMAL},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.young.model.StaffNoteExample" resultType="java.lang.Long">
    select count(*) from staff_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.young.model.StaffNote">
    update staff_note
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=DECIMAL},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="back1 != null">
        back1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        back2 = #{back2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.young.model.StaffNote">
    update staff_note
    set staff_id = #{staffId,jdbcType=INTEGER},
      staff_name = #{staffName,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=DECIMAL},
      time = #{time,jdbcType=TIMESTAMP},
      back1 = #{back1,jdbcType=VARCHAR},
      back2 = #{back2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>