<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.mapper.VipMapper">
  <resultMap id="BaseResultMap" type="com.young.model.Vip">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="mobile1" jdbcType="VARCHAR" property="mobile1" />
    <result column="mobile2" jdbcType="VARCHAR" property="mobile2" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="now_money" jdbcType="DECIMAL" property="nowMoney" />
    <result column="total_money" jdbcType="DECIMAL" property="totalMoney" />
    <result column="sum_consume" jdbcType="DECIMAL" property="sumConsume" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="back1" jdbcType="VARCHAR" property="back1" />
    <result column="back2" jdbcType="VARCHAR" property="back2" />
    <result column="back3" jdbcType="VARCHAR" property="back3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, birthday, mobile1, mobile2, score, level, now_money, total_money, 
    sum_consume, remark, back1, back2, back3
  </sql>
  <select id="selectByExample" parameterType="com.young.model.VipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vip
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vip
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.young.model.Vip">
    insert into vip (id, name, sex, birthday, 
      mobile1, mobile2, score, 
      level, now_money, total_money, 
      sum_consume, remark, back1, 
      back2, back3)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{mobile1,jdbcType=VARCHAR}, #{mobile2,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, 
      #{level,jdbcType=INTEGER}, #{nowMoney,jdbcType=DECIMAL}, #{totalMoney,jdbcType=DECIMAL}, 
      #{sumConsume,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{back1,jdbcType=VARCHAR}, 
      #{back2,jdbcType=VARCHAR}, #{back3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.young.model.Vip">
    insert into vip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="mobile1 != null">
        mobile1,
      </if>
      <if test="mobile2 != null">
        mobile2,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="nowMoney != null">
        now_money,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="sumConsume != null">
        sum_consume,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="back1 != null">
        back1,
      </if>
      <if test="back2 != null">
        back2,
      </if>
      <if test="back3 != null">
        back3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="mobile1 != null">
        #{mobile1,jdbcType=VARCHAR},
      </if>
      <if test="mobile2 != null">
        #{mobile2,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="nowMoney != null">
        #{nowMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="sumConsume != null">
        #{sumConsume,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        #{back3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.young.model.VipExample" resultType="java.lang.Long">
    select count(*) from vip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.young.model.Vip">
    update vip
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="mobile1 != null">
        mobile1 = #{mobile1,jdbcType=VARCHAR},
      </if>
      <if test="mobile2 != null">
        mobile2 = #{mobile2,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="nowMoney != null">
        now_money = #{nowMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="sumConsume != null">
        sum_consume = #{sumConsume,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="back1 != null">
        back1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        back2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        back3 = #{back3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.young.model.Vip">
    update vip
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      mobile1 = #{mobile1,jdbcType=VARCHAR},
      mobile2 = #{mobile2,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      level = #{level,jdbcType=INTEGER},
      now_money = #{nowMoney,jdbcType=DECIMAL},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      sum_consume = #{sumConsume,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      back1 = #{back1,jdbcType=VARCHAR},
      back2 = #{back2,jdbcType=VARCHAR},
      back3 = #{back3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>