<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.mapper.BoxSubscribeNoteMapper">
  <resultMap id="BaseResultMap" type="com.young.model.BoxSubscribeNote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="box_id" jdbcType="INTEGER" property="boxId" />
    <result column="to_time" jdbcType="TIMESTAMP" property="toTime" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="back1" jdbcType="VARCHAR" property="back1" />
    <result column="back2" jdbcType="VARCHAR" property="back2" />
    <result column="back3" jdbcType="VARCHAR" property="back3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, box_id, to_time, number, mobile, status, back1, back2, back3
  </sql>
  <select id="selectByExample" parameterType="com.young.model.BoxSubscribeNoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from box_subscribe_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from box_subscribe_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from box_subscribe_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.young.model.BoxSubscribeNote">
    insert into box_subscribe_note (id, box_id, to_time, 
      number, mobile, status, 
      back1, back2, back3
      )
    values (#{id,jdbcType=INTEGER}, #{boxId,jdbcType=INTEGER}, #{toTime,jdbcType=TIMESTAMP}, 
      #{number,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{back1,jdbcType=VARCHAR}, #{back2,jdbcType=VARCHAR}, #{back3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.young.model.BoxSubscribeNote">
    insert into box_subscribe_note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="boxId != null">
        box_id,
      </if>
      <if test="toTime != null">
        to_time,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="back1 != null">
        back1,
      </if>
      <if test="back2 != null">
        back2,
      </if>
      <if test="back3 != null">
        back3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="boxId != null">
        #{boxId,jdbcType=INTEGER},
      </if>
      <if test="toTime != null">
        #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="back1 != null">
        #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        #{back3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.young.model.BoxSubscribeNoteExample" resultType="java.lang.Long">
    select count(*) from box_subscribe_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.young.model.BoxSubscribeNote">
    update box_subscribe_note
    <set>
      <if test="boxId != null">
        box_id = #{boxId,jdbcType=INTEGER},
      </if>
      <if test="toTime != null">
        to_time = #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="back1 != null">
        back1 = #{back1,jdbcType=VARCHAR},
      </if>
      <if test="back2 != null">
        back2 = #{back2,jdbcType=VARCHAR},
      </if>
      <if test="back3 != null">
        back3 = #{back3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.young.model.BoxSubscribeNote">
    update box_subscribe_note
    set box_id = #{boxId,jdbcType=INTEGER},
      to_time = #{toTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      back1 = #{back1,jdbcType=VARCHAR},
      back2 = #{back2,jdbcType=VARCHAR},
      back3 = #{back3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>